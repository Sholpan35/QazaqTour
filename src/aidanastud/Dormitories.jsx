import React, { useState } from "react";

const dormData = [
  {
    id: 1,
    name: "–ê–ª–º–∞—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä “Ø–π—ñ",
    city: "–ê–ª–º–∞—Ç—ã",
    price: 25000,
    address: "–ê–±–∞—è 120, –ê–ª–º–∞—Ç—ã",
    phone: "+7 700 123 4567",
    mapUrl: "https://goo.gl/maps/your-almaty-location",
    image: "https://source.unsplash.com/400x250/?dormitory",
  },
  {
    id: 2,
    name: "–ê—Å—Ç–∞–Ω–∞ –∂–∞—Ç–∞“õ—Ö–∞–Ω–∞—Å—ã",
    city: "–ê—Å—Ç–∞–Ω–∞",
    price: 30000,
    address: "–¢”ô—É–µ–ª—Å—ñ–∑–¥—ñ–∫ 45, –ê—Å—Ç–∞–Ω–∞",
    phone: "+7 701 456 7890",
    mapUrl: "https://goo.gl/maps/your-astana-location",
    image: "https://source.unsplash.com/400x250/?student-housing",
  },
  {
    id: 3,
    name: "–®—ã–º–∫–µ–Ω—Ç –∂–∞—Ç–∞“õ—Ö–∞–Ω–∞—Å—ã",
    city: "–®—ã–º–∫–µ–Ω—Ç",
    price: 20000,
    address: "–†—ã—Å“õ“±–ª–æ–≤ 17, –®—ã–º–∫–µ–Ω—Ç",
    phone: "+7 702 987 6543",
    mapUrl: "https://goo.gl/maps/your-shymkent-location",
    image: "https://source.unsplash.com/400x250/?hostel",
  },
];

function Dormitories() {
  const [selectedCity, setSelectedCity] = useState("–ë–∞—Ä–ª—ã“ì—ã");
  const [searchTerm, setSearchTerm] = useState("");

  const filteredDorms = dormData.filter((dorm) => {
    const matchCity = selectedCity === "–ë–∞—Ä–ª—ã“ì—ã" || dorm.city === selectedCity;
    const matchSearch = dorm.name.toLowerCase().includes(searchTerm.toLowerCase());
    return matchCity && matchSearch;
  });

  return (
    <div className="px-6 py-10 max-w-6xl mx-auto">
      <h2 className="text-3xl font-bold mb-6">–ñ–∞—Ç–∞“õ—Ö–∞–Ω–∞ —Ç—ñ–∑—ñ–º—ñ</h2>
      <div className="flex flex-col md:flex-row md:items-center md:space-x-6 mb-6 gap-4">
        <div>
          <label className="text-lg mr-2">“ö–∞–ª–∞:</label>
          <select
            className="border border-gray-300 rounded px-4 py-2"
            value={selectedCity}
            onChange={(e) => setSelectedCity(e.target.value)}
          >
            <option>–ë–∞—Ä–ª—ã“ì—ã</option>
            <option>–ê–ª–º–∞—Ç—ã</option>
            <option>–ê—Å—Ç–∞–Ω–∞</option>
            <option>–®—ã–º–∫–µ–Ω—Ç</option>
          </select>
        </div>

        <div>
          <input
            type="text"
            placeholder="–ê—Ç–∞—É –±–æ–π—ã–Ω—à–∞ —ñ–∑–¥–µ—É..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="border border-gray-300 rounded px-4 py-2 w-full md:w-64"
          />
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞–ª–∞—Ä */}
      <div className="grid md:grid-cols-3 gap-6">
        {filteredDorms.map((dorm) => (
          <div key={dorm.id} className="bg-white shadow-md rounded-lg overflow-hidden flex flex-col">
            <img src={dorm.image} alt={dorm.name} className="w-full h-48 object-cover" />
            <div className="p-4 flex flex-col flex-grow">
              <h3 className="text-xl font-semibold mb-1">{dorm.name}</h3>
              <p className="text-gray-600 mb-1">{dorm.address}</p>
              <p className="text-blue-600 font-bold mb-3">{dorm.price.toLocaleString()} ‚Ç∏ / –∞–π</p>
              <a
                href={dorm.phone}
                className="text-white bg-blue-600 hover:bg-blue-700 text-sm py-2 px-4 rounded text-center mb-2" >
                –ë–∞–π–ª–∞–Ω—ã—Å—É: {dorm.phone}
              </a>
              <a
                href={dorm.mapUrl}
                target="_blank"
                rel="noopener noreferrer"
                className="text-sm text-blue-500 underline"
              >
                üó∫Ô∏è –ö–∞—Ä—Ç–∞–¥–∞ –∫”©—Ä—É
              </a>
            </div>
          </div>
        ))}
      </div>

      {filteredDorms.length === 0 && (
        <p className="mt-6 text-gray-500">–¢–∞–ø—Å—ã—Ä—ã—Å“õ–∞ —Å”ô–π–∫–µ—Å –∂–∞—Ç–∞“õ—Ö–∞–Ω–∞ —Ç–∞–±—ã–ª–º–∞–¥—ã.</p>
      )}
    </div>
  );
}

export default Dormitories;